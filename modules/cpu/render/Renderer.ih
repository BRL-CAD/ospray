// Copyright 2009-2022 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "common/Ray.ih"
#include "fb/Tile.ih"
// c++ shared
#include "RendererShared.h"

struct ScreenSample
{
  // input values to 'renderSample'
  vec3i sampleID; // x/y=pixelID, z=accumID/sampleID
  vec2f pos; // normalized screen position
  Ray ray; // the primary ray generated by the camera

  // return values from 'renderSample'
  vec3f rgb;
  float alpha;
  float z;
  vec3f normal;
  vec3f albedo;
};

inline void setTile(uniform Tile &tile,
    const varying uint32 pixel,
    const varying ScreenSample screenSample)
{
  setRGBAZ(tile, pixel, screenSample.rgb, screenSample.alpha, screenSample.z);
  setNormalAlbedo(tile, pixel, screenSample.normal, screenSample.albedo);
}

vec4f Renderer_getBackground(
    const Renderer *uniform self, const vec2f &screenPos);
float Renderer_getMaxDepth(
    const Renderer *uniform self, const vec2f &screenPos);
