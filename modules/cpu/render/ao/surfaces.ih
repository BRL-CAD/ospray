// Copyright 2009 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "common/World.ih"
// c++ shared
#include "AORendererShared.h"

OSPRAY_BEGIN_ISPC_NAMESPACE

struct DifferentialGeometry;

struct SurfaceShadingInfo
{
  vec4f shadedColor;
  vec3f albedo;
};

typedef SurfaceShadingInfo SSI;

inline void computeDG(const World *uniform world,
    const AORenderer *uniform renderer,
    const Ray &ray,
    DifferentialGeometry &dg)
{
  postIntersect(world,
      &renderer->super,
      dg,
      ray,
      DG_NG | DG_NS | DG_NORMALIZE | DG_FACEFORWARD | DG_COLOR | DG_TEXCOORD);
}

SYCL_EXTERNAL SSI AORenderer_computeShading(const AORenderer *uniform self,
    const FrameBuffer *uniform fb,
    const World *uniform world,
    const DifferentialGeometry &dg,
    ScreenSample &sample);

OSPRAY_END_ISPC_NAMESPACE
